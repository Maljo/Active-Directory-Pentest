import ldap
import random
import time

# Set the LDAP server and port
ldap_server = "ldap.example.com"
ldap_port = 389

# Set the LDAP search base and filter
search_base = "dc=example,dc=com"
search_filter = "(objectClass=*)"

# Set the LDAP search attributes
search_attrs = ["cn", "mail", "telephoneNumber"]

# Set the LDAP search scope
search_scope = ldap.SCOPE_SUBTREE

# Set the LDAP bind credentials
bind_user = "cn=admin,dc=example,dc=com"
bind_password = "password"

# Set a random delay between search requests to avoid detection
delay_range = [1, 5]

# Generate a list of user accounts to target
user_accounts = ["user1", "user2", "user3", "user4", "user5"]

# Connect to the LDAP server
ldap_conn = ldap.initialize("ldap://{0}:{1}".format(ldap_server, ldap_port))

# Bind to the LDAP server using the bind credentials
ldap_conn.simple_bind_s(bind_user, bind_password)

# Search for objects in the LDAP directory for each user account
for user in user_accounts:
    # Set the search filter to target a specific user account
    user_filter = "(cn={})".format(user)

    # Add a random delay between search requests to avoid detection
    delay = random.randint(delay_range[0], delay_range[1])
    time.sleep(delay)

    # Perform the LDAP search using the user filter
    result = ldap_conn.search_s(search_base, search_scope, user_filter, search_attrs)

    # Print the results of the LDAP search
    print("Results for {}: ".format(user))
    for dn, attrs in result:
        print("DN: {}".format(dn))
        for attr, value in attrs.items():
            print("{}: {}".format(attr, value))
        print("")
